genetic_algorithm:
  num_generations: 200
  num_parents_mating: 60
  sol_per_pop: 200
  keep_elitism: 5
  num_genes: 10  # 10
  init_range_low: 10000000000.0 # 5e9
  init_range_high: 40000000000.0 # 5e10
  random_seed: 3 # usually set to 3 in my case
  gene_space:
    low: 1000000000.0   #1e9
    high: 50000000000.0 #5e10
  #stop_criteria: saturate_20 #change the number to the number of generations without a change in fitness to stop GA


operators:
  crossover:
    type: "blend"
    probability: 0.9


  # mutation:
  #   type: "spillover"
  #   probability: 0.3
  #   spillover_rate: 0.2
  #   forward_prob: 0.5
  #   variation_prob: 0.5    # 30% chance of adding variation
  #   variation_range: 0.3   # Â±10% variation in spillover amount
  
  mutation:
    type: "random_selector"
    mutations:
      - type: "random"          # using PyGAD or custom "random" mutation
        selection_probability: 2
        mutation_probability: 0.5
        random_mutation_min_val: -1000000000.0 # -1e9
        random_mutation_max_val: 1000000000.0 # 1e9
      # - type: "spillover"
      #   selection_probability: 1
      #   probability: 0.1
      #   spillover_rate: 0.2
      #   forward_prob: 0.5
      #   variation_prob: 0.0
      #   variation_range: 0.1
      # - type: "optimized_creep"
      #   selection_probability: 2
      #   probability: 0.1
      #   addition_probability: 0.5
      #   mutation_min_val: 500000000.0   # 5e8
      #   mutation_max_val: 5000000000.0  # 5e9
      # - type: "directional_creep"
      #   selection_probability: 1
      #   probability: 0.8
      #   direction_bias: 0.5
      #   mutation_min_val: 100000000.0  # 1e8
      #   mutation_max_val: 1000000000.0  # 1e9
      # - type: "distancing"   # new distancing mutation
      #   selection_probability: 1
      #   probability: 0.8
      #   distancing_min_factor: 0.9
      #   distancing_max_factor: 1.1
        
          

  selection:
    type: "sus"


optimization:
  fitness:
    type: "single_objective"  #  "single_objective" or "multi_objective"
    parameters:
      num_modes: 4
      noise_stddev_factor: 0.1
      save_results: false
      save_filepath: "fitness_results_multiobj.jsonl"
      objectives:
        - type: "mode_direct"
          use_log: true
          weight: 0.67

        - type: "frequency"
          use_log: true
          weight: 0.33  # only used in single-objective mode
        # - type: "individual_mode"
        #   mode_index: 0
        #   use_log: true
        #   weight: 0.2  # only used in single-objective mode
        # - type: "individual_mode"
        #   mode_index: 1
        #   use_log: true
        #   weight: 0.2  # only used in single-objective mode
        # - type: "individual_mode"
        #   mode_index: 2
        #   use_log: true
        #   weight: 0.2  # only used in single-objective mode
        # - type: "individual_mode"
          # mode_index: 3
          # use_log: true
          # weight: 0.2  # only used in single-objective mode
        # - type: "mac"
        #   use_log: true
        #   weight: 0.4
        

output_directory: "results/noisy_ga_optimization_updated"
output_file: "noisy_runs.jsonl"
save_intermediate: false